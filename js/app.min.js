require(["esri/Map","esri/views/MapView","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/widgets/Sketch/SketchViewModel","esri/Graphic","esri/tasks/support/AttachmentQuery","esri/Basemap","esri/layers/VectorTileLayer","esri/widgets/Zoom/ZoomViewModel","esri/layers/support/LabelClass","esri/geometry/geometryEngine"],(function(Map,MapView,FeatureLayer,GraphicsLayer,SketchViewModel,Graphic,AttachmentQuery,Basemap,VectorTileLayer,ZoomViewModel,LabelClass,geometryEngine){var view,map,localitiesLayer,localityLayerView,countiesLayer,regionsLayer,neighborhoodsLayer,clientFeatureLayer,selectedFeatureGraphicLayer,sketchGraphicsLayer,sketchViewModel,zoomViewModel,highlight,polygonHighlight,splide,captionsJSON;const sliderDiv=document.getElementById("sliderDiv"),zoomInDiv=document.getElementById("zoomIn"),zoomOutDiv=document.getElementById("zoomOut"),featureCountDiv=document.getElementById("excavationNumber"),invertCountDiv=document.getElementById("invertCount"),vertCountDiv=document.getElementById("vertCount"),drawSvg=document.getElementById("drawPath"),resetSvg=document.getElementById("resetWidget"),locationButton=document.getElementById("locationButton"),locationDiv=document.getElementById("location"),collectionButton=document.getElementById("collectionButton"),collectionDiv=document.getElementById("collection"),collectionCaption=document.getElementById("collectionButtonCaption"),locationCaption=document.getElementById("locationButtonCaption"),photoLegend=document.getElementsByClassName("photo-indicator")[0],taxaGrid=document.getElementsByClassName("taxa__grid")[0],timescaleDiv=document.getElementsByClassName("timescale__container")[0],timescaleBar=document.getElementById("indicator"),infoCardDiv=document.getElementById("infoCard"),noInfoCardDiv=document.getElementById("noInfoCard"),collectionInfoDiv=document.getElementsByClassName("collection--info")[0],collectionNullDiv=document.getElementsByClassName("collection--null")[0],taxaInfoDiv=document.getElementsByClassName("taxa--info")[0],taxaNullDiv=document.getElementsByClassName("taxa--null")[0],uiTopLeftCollection=document.getElementsByClassName("ui-top-left"),instructionsContainer=document.getElementsByClassName("instructions__container")[0],instructionsDiv=document.getElementsByClassName("instructions")[0];setUpMap();var regionsObject={Neighborhoods:neighborhoodsLayer,Regions:regionsLayer,Counties:countiesLayer},resetMapSetInterval=setInterval(resetButtonClickHandler,9e4);function setNavigationBounds(){var initialExtent=view.extent;view.watch("stationary",(function(event){if(event){var currentCenter=view.extent.center;if(!initialExtent.contains(currentCenter)){var newCenter=view.extent.center;currentCenter.x<initialExtent.xmin&&(newCenter.x=initialExtent.xmin),currentCenter.x>initialExtent.xmax&&(newCenter.x=initialExtent.xmax),currentCenter.y<initialExtent.ymin&&(newCenter.y=initialExtent.ymin),currentCenter.y>initialExtent.ymax&&(newCenter.y=initialExtent.ymax),view.goTo(newCenter)}}}))}function resetButtonClickHandler(){sketchViewModel.cancel(),view.goTo({center:[-118.248638,34.06266],zoom:8}),highlight&&highlight.remove(),resetClientFeatureLayer(),clearGraphics(),clearWidgets()}function drawButtonClickHandler(){clearGraphics(),sketchViewModel.create("polygon",{mode:"freehand"})}function zoomInClickHandler(){zoomViewModel.zoomIn()}function zoomOutClickHandler(){zoomViewModel.zoomOut()}function returnTimeRange(specimenID){var ageRange,age;return[ageRange=captionsJSON[specimenID].AgeRange,age=captionsJSON[specimenID].Age]}function moveTimescale(ageArray){let ageRange,age,minAge,maxAge;[ageRange,age]=ageArray,ageRange=ageRange.split(" - ");const sortedAgeArray=ageRange.sort((a,b)=>a-b);if([minAge,maxAge]=sortedAgeArray,maxAge)var fossilAgeRange=maxAge-minAge;else var fossiAgeRange=minAge;const totalAge=100;timescaleBar.style.right=`${minAge/100*100}%`;const timescaleWidth=timescaleDiv.clientWidth,timeRatio=timescaleWidth/100;timescaleBar.style.width=`${timeRatio*fossilAgeRange}px`}function loadJSON(callback){var xobj=new XMLHttpRequest;xobj.overrideMimeType("application/json"),xobj.open("GET","captions.json",!0),xobj.onreadystatechange=function(){4==xobj.readyState&&"200"==xobj.status&&callback(xobj.responseText)},xobj.send(null)}function removeFileExtension(fileName){return fileName.substr(0,fileName.lastIndexOf("."))}function resetSplide(){const splideTrack=document.getElementsByClassName("splide__list")[0],splidePagination=document.getElementsByClassName("splide__pagination")[0];splideTrack.innerHTML="",splidePagination&&splidePagination.remove()}function formatCaptions(attachment){const attachmentName=removeFileExtension(attachment.name),specimenCaption=document.createElement("p"),taxonCaption=document.createElement("b"),ageCaption=document.createElement("p"),descriptionCaption=document.createElement("p"),catNumber=attachmentName.replace("_"," ").replace("-","."),catNumberCaption=document.createTextNode(` (${catNumber})`),captionsDiv=document.createElement("div");captionsDiv.classList.add("splide__captions");const attachmentRecord=captionsJSON[attachmentName];return taxonCaption.innerHTML=attachmentRecord.Taxon,ageCaption.innerHTML=`${attachmentRecord.AgeRange} ${attachmentRecord.Age}`,descriptionCaption.innerHTML=attachmentRecord.Description,specimenCaption.append(taxonCaption,catNumberCaption),captionsDiv.append(specimenCaption,ageCaption,descriptionCaption),captionsDiv}function addPhotoToSplide(attachment){var img=document.createElement("img"),li=document.createElement("li"),splideList=document.getElementsByClassName("splide__list")[0],captions=formatCaptions(attachment);li.classList.add("splide__slide"),li.classList.add(attachment.parentObjectId),img.id=attachment.name.split(".")[0],img.src=attachment.url;var newSlide=splideList.appendChild(li),div=document.createElement("div");div.className="splide__slide--imageContainer",newSlide.appendChild(div).appendChild(img),newSlide.appendChild(captions)}function newSplide(){splide=new Splide(".splide",{lazyLoad:!0}).mount()}function hideDiv(div){div.style.left="-125%"}function displayDiv(div){div.style.display="flex",div.style.left="0"}function clearWidgets(){for(let container of uiTopLeftCollection)container.style.left="-100%"}function clearGraphics(){sketchGraphicsLayer.removeAll(),selectedFeatureGraphicLayer.removeAll(),view.graphics.removeAll()}function setVisible(selector,boolean){document.querySelector(selector).style.visibility=boolean?"visible":"hidden"}function setFlex(element,boolean){element.style.display=boolean?"flex":"none"}function setDisplay(element,boolean){element.style.display=boolean?"block":"none"}function resetClientFeatureLayer(){clientFeatureLayer.queryFeatures().then((function(results){const removeFeatures={deleteFeatures:results.features};applyEditsToClientFeatureLayer(removeFeatures)}))}function addEdits(results){var graphics=[];results.features.forEach((function(feature){var graphic=new Graphic({source:results.features,geometry:feature.geometry,attributes:{name:feature.attributes.name,region_type:feature.layer.title}});graphics.push(graphic)}));const edits={addFeatures:graphics};console.log(edits),applyEditsToClientFeatureLayer(edits)}function applyEditsToClientFeatureLayer(edits){clientFeatureLayer.applyEdits(edits).then((function(results){if(results.deleteFeatureResults.length>0&&console.log(results.deleteFeatureResults.length,"features have been removed"),results.addFeatureResults.length>0){var objectIds=[];results.addFeatureResults.forEach((function(feature){objectIds.push(feature.objectId)})),clientFeatureLayer.queryFeatures({objectIds:objectIds}).then((function(results){console.log(results.features.length,"features have been added.")}))}})).catch((function(error){console.log(error)}))}function zoomToFeature(featureName,geometry){const geometryOffset=-geometry.extent.width/2,goToOptions={animate:!0,duration:600,ease:"ease-in-out"};"Los Angeles"===featureName?view.goTo({center:[-118.735491,34.222515],zoom:8},goToOptions).catch((function(error){"AbortError"!=error.name&&console.error(error)}),goToOptions):"Ventura"==featureName?view.goTo({center:[-119.254898,34.515522],zoom:8},goToOptions).catch((function(error){"AbortError"!=error.name&&console.error(error)})):view.goTo(geometry.extent.expand(2).offset(geometryOffset,0),goToOptions).catch((function(error){"AbortError"!=error.name&&console.error(error)}))}function formatTaxa(taxa){const taxaList=taxa.map(taxon=>JSON.parse(taxon));for(var combinedTaxaObject={},i=0;i<taxaList.length;i++)Object.keys(taxaList[i]).map(taxon=>{var locTaxa=taxaList[i];"Insects"==taxon||"Hydrozoa"==taxon||(combinedTaxaObject[taxon]?combinedTaxaObject[taxon]+=locTaxa[taxon]:combinedTaxaObject[taxon]=locTaxa[taxon])});return combinedTaxaObject}function formatTaxaCell(taxonName,taxonNumber){"Clams, oysters, ect."===taxonName?taxonName="Clams, oysters":"Ammonoids, nautiloids"===taxonName&&(taxonName="Nautiloids");var cell=document.createElement("div"),taxaIcon=document.createElement("div"),taxonDiv=document.createElement("p");cell.classList.add("taxa__cell"),taxaIcon.classList.add("taxa__icon"),taxonDiv.innerHTML=`${taxonNumber.toString()} ${taxonName}`,cell.append(taxaIcon,taxonDiv),taxaGrid.append(cell)}function populateInfoCards(returnedLocalities,polygonName){taxaGrid.innerHTML="";const objectIds=returnedLocalities.map(loc=>loc.attributes.OBJECTID),fossilsFound=returnedLocalities.length;for(let div of document.getElementsByClassName("featureName"))div.innerText=polygonName;if(fossilsFound>0){setTimeout,hideDiv(noInfoCardDiv),displayDiv(infoCardDiv);const taxa=returnedLocalities.map(loc=>loc.attributes.taxa).filter(taxa=>!(""==taxa));if(0!==taxa.length){setFlex(taxaNullDiv,!1),setFlex(taxaInfoDiv,!0);const formattedTaxa=formatTaxa(taxa);for(const taxon in formattedTaxa)formatTaxaCell(taxon,formattedTaxa[taxon])}else setFlex(taxaInfoDiv,!1),setFlex(taxaNullDiv,!0);createSplideFromAttachments(localitiesLayer,objectIds),featureCountDiv.innerHTML=fossilsFound.toString()+" excavation sites"}else hideDiv(infoCard),displayDiv(noInfoCardDiv)}function highlightLocalities(queriedLocalities){highlight&&highlight.remove(),highlight=localityLayerView.highlight(queriedLocalities)}function selectFeaturesFromClick(screenPoint){clearGraphics();var includeLayers=[countiesLayer,neighborhoodsLayer,regionsLayer,clientFeatureLayer];view.hitTest(screenPoint,{include:includeLayers}).then((function(response){var returnedFeature=response.results[0].graphic;if(response.results.length>0){const regionsQuery={where:`name = '${returnedFeature.attributes.name}'`,returnGeometry:!0,outFields:["*"]};regionsObject[returnedFeature.attributes.region_type].queryFeatures(regionsQuery).then((function(f){var clickFeature=f.features[0];selectLocalities(clickFeature),displayIntersectingFeatures(clickFeature);const selectedFeatureGraphic=new Graphic({geometry:clickFeature.geometry,symbol:{type:"simple-fill",color:[0,185,235,.2],outline:{color:[0,185,235,1],width:4}}});selectedFeatureGraphicLayer.graphics.removeAll(),selectedFeatureGraphicLayer.graphics.add(selectedFeatureGraphic)})).catch((function(error){console.log(error)}))}else resetButtonClickHandler()}))}function selectLocalities(feature){if(feature.attributes)var featureName=feature.attributes.name;else var featureName="the area";const geometry=geometryEngine.simplify(feature.geometry);zoomToFeature(featureName,geometry);const query={geometry:geometry,spatialRelationship:"intersects",outFields:["*"],maxRecordCountFactor:3};localitiesLayer.queryFeatures(query).then((function(results){const queriedLocalities=results.features;populateInfoCards(queriedLocalities,featureName),highlightLocalities(queriedLocalities)})).catch((function(error){console.log(error)}))}function displayIntersectingFeatures(feature){const regionType=feature.layer.title,query={where:"parent_region = '"+feature.attributes.name+"'",returnGeometry:!0,outFields:["*"]};clientFeatureLayer.queryFeatures().then((function(results){const removeFeatures={deleteFeatures:results.features};applyEditsToClientFeatureLayer(removeFeatures)})),"Counties"==regionType?regionsLayer.queryFeatures(query).then((function(results){addEdits(results)})):neighborhoodsLayer.queryFeatures(query).then((function(results){addEdits(results)}))}function createSplideFromAttachments(layer,ids){var attachmentQuery=new AttachmentQuery({objectIds:ids});layer.queryAttachments(attachmentQuery).then((function(attachments){const attachmentList=Object.values(attachments).map(attachment=>attachment[0]);if(document.getElementById("attachmentCount").innerText=attachmentList.length,attachmentList.length>0){setFlex(collectionInfoDiv,!0),setFlex(collectionNullDiv,!1);var selectedAttachmentList=[];if(attachmentList.length>7){let i=0;for(;i<7;){const randomNumber=Math.floor(Math.random()*attachmentList.length),randomAttachment=attachmentList.splice(randomNumber,1)[0];selectedAttachmentList.push(randomAttachment),i++}}else selectedAttachmentList=attachmentList;resetSplide(),selectedAttachmentList.forEach(attachment=>{addPhotoToSplide(attachment)}),newSplide(),displayDiv(sliderDiv),createPointGraphicAtObjectId(attachmentList[0].parentObjectId),splide.on("active",(function(slide){const slideObjectId=slide.slide.classList[1];createPointGraphicAtObjectId(slideObjectId);const slideImg=slide.slide.getElementsByTagName("img")[0],specimenID=slideImg.id,timeRange=returnTimeRange(specimenID);moveTimescale(timeRange)}))}else collectionNullDiv.style.display="block",setFlex(collectionInfoDiv,!1),setFlex(photoLegend,!1)}))}function createPointGraphicAtObjectId(objectId){var highlightQuery={objectIds:[objectId],outFields:["*"],returnGeometry:!0};localityLayerView.queryFeatures(highlightQuery).then((function(attachment){var visibleAttachmentGeometry={type:"point",longitude:attachment.features[0].geometry.longitude,latitude:attachment.features[0].geometry.latitude};const selectedGraphic=new Graphic({geometry:visibleAttachmentGeometry,symbol:{type:"simple-marker",style:"circle",color:"orange",size:"12px",outline:{color:[255,255,0],width:2}}});view.graphics.removeAll(),view.graphics.add(selectedGraphic),locationButton.classList.contains("button--active")&&(view.graphics.items[0].visible=!1)}))}function setUpMap(){var basemap=new Basemap({baseLayers:[new VectorTileLayer({portalItem:{id:"c65f3f7dc5754366b4e515e73e2f7d8b"}})]});map=new Map({basemap:basemap}),view=new MapView({container:"viewDiv",map:map,center:[-118.248638,34.06266],zoom:8,constraints:{snapToZoom:!0,rotationEnabled:!1,minZoom:7},popup:{autoOpenEnabled:!1},highlightOptions:{color:[0,185,235,.75],fillOpacity:.4},ui:{components:[]}}),sketchGraphicsLayer=new GraphicsLayer,map.add(sketchGraphicsLayer),selectedFeatureGraphicLayer=new GraphicsLayer,map.add(selectedFeatureGraphicLayer),sketchViewModel=new SketchViewModel({view:view,layer:sketchGraphicsLayer,updateOnGraphicClick:!1,polygonSymbol:{type:"simple-fill",color:[0,185,235,.2],size:"1px",outline:{color:[0,185,235,.5],width:"3px"}}}),zoomViewModel=new ZoomViewModel({view:view}),drawWidget.addEventListener("click",(function(event){event.preventDefault,drawSvg.classList.remove("draw-widget__animation"),drawWidget.offsetWidth,drawSvg.classList.add("draw-widget__animation")}),!1);var resetSvg=document.getElementById("resetSvg");resetWidget.addEventListener("click",(function(event){event.preventDefault,resetSvg.classList.remove("reset-widget__animation"),resetWidget.offsetWidth,resetSvg.classList.add("reset-widget__animation")}),!1);const localitiesRenderer={type:"simple",symbol:{type:"simple-marker",size:6,color:[20,204,180,.5],outline:{width:0,color:[247,247,247,.5]}}},heatmapRenderer_type="heatmap",heatmapRenderer_colorStops=[{color:"rgba(63, 40, 102, 0)",ratio:0},{color:"#5d32a8",ratio:.332},{color:"#a46fbf",ratio:.747},{color:"#c29f80",ratio:.83},{color:"#e0cf40",ratio:.913},{color:"#ffff00",ratio:1}],heatmapRenderer_maxPixelIntensity=25,heatmapRenderer_minPixelIntensity=0,polygonFeatureRenderer={type:"simple",symbol:{type:"simple-fill",style:"none",outline:{color:[128,128,128,.5],width:"1.5px"}}},countiesLabelClass=new LabelClass({labelExpressionInfo:{expression:"$feature.NAME"},symbol:{type:"text",color:"rgb(40, 40, 40)",haloSize:.5,haloColor:"white",font:{family:"Avenir Next LT Pro Regular",weight:"bold",size:13}}}),regionsLabelClass=new LabelClass({labelExpressionInfo:{expression:"$feature.NAME"},symbol:{type:"text",color:"rgb(40, 40, 40)",haloSize:.5,haloColor:"white",deconflictionStrategy:"static",font:{family:"Avenir Next LT Pro Regular",weight:"normal",size:9.5}}}),areasLabelClass=new LabelClass({labelExpressionInfo:{expression:"Replace(Trim($feature.name), ' ', TextFormatting.NewLine)"},symbol:{type:"text",color:"rgb(40, 40, 40)",haloSize:.5,haloColor:"white",deconflictionStrategy:"static",font:{family:"Avenir Next LT Pro Regular",weight:"bold",size:9.5}}});var countiesMaxScale=1155581,regionsMaxScale=288895,neighborhoodsMinScale=144448;clientFeatureLayer=new FeatureLayer({title:"Areas",spatialReference:{wkid:4326},fields:[{name:"region_type",alias:"Region Type",type:"string"},{name:"objectId",alias:"ObjectId",type:"oid"},{name:"name",alias:"Name",type:"string"},{name:"legacyId",alias:"Legacy object ID",type:"string"}],objectIdField:"objectId",geometryType:"polygon",outFields:["*"],source:[],renderer:polygonFeatureRenderer,labelingInfo:[areasLabelClass]}),localitiesLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/LAU_Localities_View/FeatureServer",renderer:localitiesRenderer}),countiesLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/SoCal_Counties_View/FeatureServer",maxScale:1155581,labelingInfo:[countiesLabelClass],renderer:polygonFeatureRenderer,title:"Counties",outFields:["*"]}),regionsLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/SoCal_Regions_(v2)_View/FeatureServer",minScale:1155581,maxScale:288895,labelingInfo:[regionsLabelClass],renderer:polygonFeatureRenderer,title:"Regions",outFields:["*"]}),neighborhoodsLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/SoCal_Neighborhoods_View/FeatureServer",minScale:144448,labelingInfo:[regionsLabelClass],renderer:polygonFeatureRenderer,title:"Neighborhoods",outFields:["*"]});const vectorLocalitiesLayer=new VectorTileLayer({url:"https://vectortileservices7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/LAU_Localities_View_Vector_Tile_Layer/VectorTileServer"});map.addMany([neighborhoodsLayer,regionsLayer,countiesLayer,clientFeatureLayer,vectorLocalitiesLayer]);for(let widget of document.getElementsByClassName("widget"))widget.style.opacity="1";var ui=document.getElementsByClassName("ui-container");for(let e of ui)view.ui.add(e);view.whenLayerView(localitiesLayer).then((function(layerView){localityLayerView=layerView}))}document.onclick=clearInterval(resetMapSetInterval),view.when(()=>{setNavigationBounds()}),document.onclick=function(){instructionsDiv.style.top="150%",setTimeout(()=>{instructionsContainer.style.display="none"},401)},drawSvg.addEventListener("click",drawButtonClickHandler),resetSvg.addEventListener("click",resetButtonClickHandler),zoomInDiv.addEventListener("click",zoomInClickHandler),zoomOutDiv.addEventListener("click",zoomOutClickHandler),view.on("click",(function(event){selectFeaturesFromClick(event)})),sketchViewModel.on("create",(function(event){"complete"===event.state&&selectLocalities(event.graphic)})),locationButton.addEventListener("click",()=>{setFlex(collectionDiv,!1),setFlex(locationDiv,!0),setFlex(photoLegend,!1),locationButton.classList.add("button--active"),collectionButton.classList.remove("button--active"),collectionCaption.classList.remove("button__caption--active"),locationCaption.classList.add("button__caption--active"),view.graphics.items[0].visible=!1}),collectionButton.addEventListener("click",()=>{if(setFlex(locationDiv,!1),setFlex(collectionDiv,!0),locationButton.classList.remove("button--active"),collectionButton.classList.add("button--active"),collectionCaption.classList.add("button__caption--active"),locationCaption.classList.remove("button__caption--active"),splide){const splideSlides=splide.Components.Elements.slides;if(setFlex(photoLegend,!0),view.graphics.items[0].visible=!0,splideSlides[0].classList.contains("is-active")){const specimenID=splideSlides[0].getElementsByTagName("img")[0].id,timeRange=returnTimeRange(specimenID);moveTimescale(timeRange)}}}),loadJSON(json=>{captionsJSON=JSON.parse(json)})}));let splideArrows=document.getElementsByClassName("splide__arrow");for(let arrow of splideArrows)arrow.classList.add("hvr-grow-shadow--arrow");