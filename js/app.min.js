require(["esri/Map","esri/views/MapView","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/widgets/Sketch/SketchViewModel","esri/Graphic","esri/tasks/support/AttachmentQuery","esri/Basemap","esri/layers/VectorTileLayer","esri/widgets/Zoom/ZoomViewModel","esri/layers/support/LabelClass","esri/geometry/geometryEngine"],(function(Map,MapView,FeatureLayer,GraphicsLayer,SketchViewModel,Graphic,AttachmentQuery,Basemap,VectorTileLayer,ZoomViewModel,LabelClass,geometryEngine){var view,map,localitiesLayer,localityLayerView,countiesLayer,regionsLayer,neighborhoodsLayer,clientFeatureLayer,selectedFeatureGraphicLayer,sketchGraphicsLayer,sketchViewModel,zoomViewModel,highlight,polygonHighlight,splide,infoDiv=document.getElementById("infoDiv"),sliderDiv=document.getElementById("sliderDiv"),zoomDiv=document.getElementById("zoomDiv"),zoomInDiv=document.getElementById("zoom-in"),zoomOutDiv=document.getElementById("zoom-out"),featureCountDiv=document.getElementById("featureCount"),invertCountDiv=document.getElementById("invertCount"),vertCountDiv=document.getElementById("vertCount"),noFossilsInfo=document.getElementById("noFossilsInfo"),taxaInfo=document.getElementById("taxaInfo");setUpMap();var regionsObject={Neighborhoods:neighborhoodsLayer,Regions:regionsLayer,Counties:countiesLayer},resetMapSetInterval=setInterval(resetButtonClickHandler,9e4);function setNavigationBounds(){var initialExtent=view.extent;view.watch("stationary",(function(event){if(event){var currentCenter=view.extent.center;if(!initialExtent.contains(currentCenter)){var newCenter=view.extent.center;currentCenter.x<initialExtent.xmin&&(newCenter.x=initialExtent.xmin),currentCenter.x>initialExtent.xmax&&(newCenter.x=initialExtent.xmax),currentCenter.y<initialExtent.ymin&&(newCenter.y=initialExtent.ymin),currentCenter.y>initialExtent.ymax&&(newCenter.y=initialExtent.ymax),view.goTo(newCenter)}}}))}function resetButtonClickHandler(){sketchViewModel.cancel(),view.goTo({center:[-118.248638,34.06266],zoom:8}),highlight&&highlight.remove(),resetClientFeatureLayer(),clearGraphics(),clearWidgets()}function drawButtonClickHandler(){clearGraphics(),sketchViewModel.create("polygon",{mode:"freehand"})}function zoomInClickHandler(){zoomViewModel.zoomIn()}function zoomOutClickHandler(){zoomViewModel.zoomOut()}function loadJSON(callback){var xobj=new XMLHttpRequest;xobj.overrideMimeType("application/json"),xobj.open("GET","captions.json",!0),xobj.onreadystatechange=function(){4==xobj.readyState&&"200"==xobj.status&&callback(xobj.responseText)},xobj.send(null)}function removeFileExtension(fileName){return fileName.substr(0,fileName.lastIndexOf("."))}function resetSplide(){const splideTrack=document.getElementsByClassName("splide__list")[0],splidePagination=document.getElementsByClassName("splide__pagination")[0];splideTrack.innerHTML="",splidePagination&&splidePagination.remove()}function formatCaptions(attachment){var attachmentName=removeFileExtension(attachment.name),specimenCaption=document.createElement("p"),taxonCaption=document.createElement("b"),ageCaption=document.createElement("p"),descriptionCaption=document.createElement("p"),catNumber=attachmentName.replace("_"," ").replace("-","."),catNumberCaption=document.createTextNode(` (${catNumber})`),captionsDiv=document.createElement("div");return loadJSON(json=>{var captionsJSON,attachmentRecord=JSON.parse(json)[attachmentName];taxonCaption.innerHTML=attachmentRecord.Taxon,ageCaption.innerHTML=attachmentRecord.Age,descriptionCaption.innerHTML=attachmentRecord.Description}),specimenCaption.append(taxonCaption,catNumberCaption),captionsDiv.append(specimenCaption,ageCaption,descriptionCaption),captionsDiv}function addPhotoToSplide(attachment){var img=document.createElement("img"),li=document.createElement("li"),splideList=document.getElementsByClassName("splide__list")[0],captions=formatCaptions(attachment);li.classList.add("splide__slide"),li.classList.add(attachment.parentObjectId),img.src=attachment.url;var newSlide=splideList.appendChild(li),div=document.createElement("div");div.className="splide__slide--imageContainer",newSlide.appendChild(div).appendChild(img),newSlide.appendChild(captions)}function newSplide(){splide=new Splide(".splide",{lazyLoad:!0}).mount()}function hideDiv(div){div.style.marginLeft="-1000px"}function displayDiv(div){div.style.display="block",div.style.marginLeft="0px"}function clearWidgets(){hideDiv(sliderDiv),hideDiv(infoDiv)}function resetInfoDiv(){featureCountDiv.innerHTML="",invertCountDiv.innerHTML="",vertCountDiv.innerHTML=""}function clearGraphics(){sketchGraphicsLayer.removeAll(),selectedFeatureGraphicLayer.removeAll(),view.graphics.removeAll()}function resetClientFeatureLayer(){clientFeatureLayer.queryFeatures().then((function(results){const removeFeatures={deleteFeatures:results.features};applyEditsToClientFeatureLayer(removeFeatures)}))}function addEdits(results){var graphics=[];results.features.forEach((function(feature){var graphic=new Graphic({source:results.features,geometry:feature.geometry,attributes:{name:feature.attributes.name,region_type:feature.layer.title}});graphics.push(graphic)}));const edits={addFeatures:graphics};console.log(edits),applyEditsToClientFeatureLayer(edits)}function applyEditsToClientFeatureLayer(edits){clientFeatureLayer.applyEdits(edits).then((function(results){if(results.deleteFeatureResults.length>0&&console.log(results.deleteFeatureResults.length,"features have been removed"),results.addFeatureResults.length>0){var objectIds=[];results.addFeatureResults.forEach((function(feature){objectIds.push(feature.objectId)})),clientFeatureLayer.queryFeatures({objectIds:objectIds}).then((function(results){console.log(results.features.length,"features have been added.")}))}})).catch((function(error){console.log(error)}))}function zoomToFeature(featureName,geometry){const geometryOffset=-geometry.extent.width/2;"Los Angeles"===featureName?view.goTo({center:[-118.735491,34.222515],zoom:8}).catch((function(error){"AbortError"!=error.name&&console.error(error)})):"Ventura"==featureName?view.goTo({center:[-119.254898,34.515522],zoom:8}).catch((function(error){"AbortError"!=error.name&&console.error(error)})):view.goTo(geometry.extent.expand(2).offset(geometryOffset,0)).catch((function(error){"AbortError"!=error.name&&console.error(error)}))}function populateInfoCards(returnedLocalities,polygonName){const objectIds=returnedLocalities.map(loc=>loc.attributes.OBJECTID),invertCount=returnedLocalities.filter(loc=>"Invertebrate"==loc.attributes.category).length,vertCount=returnedLocalities.filter(loc=>"Vertebrate"==loc.attributes.category).length,fossilsFound=returnedLocalities.length;fossilsFound>0?(createSplideFromAttachments(localitiesLayer,objectIds),"block"===noFossilsInfo.style.display?(hideDiv(infoDiv),setTimeout(()=>{noFossilsInfo.style.display="none",displayDiv(taxaInfo),displayDiv(infoDiv)},500)):(displayDiv(taxaInfo),displayDiv(infoDiv)),document.getElementById("featureCount").innerHTML=fossilsFound.toString(),document.getElementById("featureText").innerHTML=" fossil site in </br>"+polygonName+"!",invertCountDiv.innerHTML=invertCount+" invertebrates",vertCountDiv.innerHTML=vertCount+" vertebrates"):("block"===taxaInfo.style.display&&(hideDiv(infoDiv),setTimeout(()=>{taxaInfo.style.display="none",displayDiv(infoDiv),displayDiv(noFossilsInfo)},500)),hideDiv(sliderDiv))}function highlightLocalities(queriedLocalities){highlight&&highlight.remove(),highlight=localityLayerView.highlight(queriedLocalities)}function selectFeaturesFromClick(screenPoint){clearGraphics();var includeLayers=[countiesLayer,neighborhoodsLayer,regionsLayer,clientFeatureLayer];view.hitTest(screenPoint,{include:includeLayers}).then((function(response){var returnedFeature=response.results[0].graphic;if(response.results.length>0){const regionsQuery={where:`name = '${returnedFeature.attributes.name}'`,returnGeometry:!0,outFields:["*"]};regionsObject[returnedFeature.attributes.region_type].queryFeatures(regionsQuery).then((function(f){var clickFeature=f.features[0];selectLocalities(clickFeature),displayIntersectingFeatures(clickFeature);const selectedFeatureGraphic=new Graphic({geometry:clickFeature.geometry,symbol:{type:"simple-fill",color:[0,185,235,.2],outline:{color:[0,185,235,1],width:4}}});selectedFeatureGraphicLayer.graphics.removeAll(),selectedFeatureGraphicLayer.graphics.add(selectedFeatureGraphic)})).catch((function(error){console.log(error)}))}else resetButtonClickHandler()}))}function selectLocalities(feature){if(feature.attributes)var featureName=feature.attributes.name;else var featureName="the area";const geometry=geometryEngine.simplify(feature.geometry);zoomToFeature(featureName,geometry);const query={geometry:geometry,spatialRelationship:"intersects",outFields:["*"],maxRecordCountFactor:3};localitiesLayer.queryFeatures(query).then((function(results){const queriedLocalities=results.features;populateInfoCards(queriedLocalities,featureName),highlightLocalities(queriedLocalities)})).catch((function(error){console.log(error)}))}function displayIntersectingFeatures(feature){const regionType=feature.layer.title,query={where:"parent_region = '"+feature.attributes.name+"'",returnGeometry:!0,outFields:["*"]};clientFeatureLayer.queryFeatures().then((function(results){const removeFeatures={deleteFeatures:results.features};applyEditsToClientFeatureLayer(removeFeatures)})),"Counties"==regionType?regionsLayer.queryFeatures(query).then((function(results){addEdits(results)})):neighborhoodsLayer.queryFeatures(query).then((function(results){addEdits(results)}))}function createSplideFromAttachments(layer,ids){var attachmentQuery=new AttachmentQuery({objectIds:ids});layer.queryAttachments(attachmentQuery).then((function(attachments){const attachmentList=Object.values(attachments).map(attachment=>attachment[0]);attachmentList.length>0?(resetSplide(),attachmentList.forEach(attachment=>{addPhotoToSplide(attachment)}),newSplide(),displayDiv(sliderDiv),createPointGraphicAtObjectId(attachmentList[0].parentObjectId),splide.on("active",(function(slide){const slideObjectId=slide.slide.classList[1];createPointGraphicAtObjectId(slideObjectId)}))):hideDiv(sliderDiv)}))}function createPointGraphicAtObjectId(objectId){var highlightQuery={objectIds:[objectId],outFields:["*"],returnGeometry:!0};localityLayerView.queryFeatures(highlightQuery).then((function(attachment){var visibleAttachmentGeometry={type:"point",longitude:attachment.features[0].geometry.longitude,latitude:attachment.features[0].geometry.latitude};const selectedGraphic=new Graphic({geometry:visibleAttachmentGeometry,symbol:{type:"simple-marker",style:"circle",color:"orange",size:"12px",outline:{color:[255,255,0],width:2}}});view.graphics.removeAll(),view.graphics.add(selectedGraphic)}))}function setUpMap(){var basemap=new Basemap({baseLayers:[new VectorTileLayer({portalItem:{id:"c65f3f7dc5754366b4e515e73e2f7d8b"}})]});map=new Map({basemap:basemap}),view=new MapView({container:"viewDiv",map:map,center:[-118.248638,34.06266],zoom:8,constraints:{snapToZoom:!0,rotationEnabled:!1,minZoom:7},popup:{autoOpenEnabled:!1},highlightOptions:{color:[0,185,235,.75],fillOpacity:.4},ui:{components:[]}}),sketchGraphicsLayer=new GraphicsLayer,map.add(sketchGraphicsLayer),selectedFeatureGraphicLayer=new GraphicsLayer,map.add(selectedFeatureGraphicLayer),sketchViewModel=new SketchViewModel({view:view,layer:sketchGraphicsLayer,updateOnGraphicClick:!1,polygonSymbol:{type:"simple-fill",color:[0,185,235,.2],size:"1px",outline:{color:[0,185,235,.5],width:"3px"}}}),zoomViewModel=new ZoomViewModel({view:view});var drawContainer=document.getElementById("select-by-polygon"),drawSvg=document.getElementById("brush-path");drawContainer.addEventListener("click",(function(event){event.preventDefault,drawSvg.classList.remove("draw-animation"),drawContainer.offsetWidth,drawSvg.classList.add("draw-animation")}),!1);var resetContainer=document.getElementById("return-to-extent"),resetSvg=document.getElementById("reset-widget");resetContainer.addEventListener("click",(function(event){event.preventDefault,resetSvg.classList.remove("reset-animation"),resetContainer.offsetWidth,resetSvg.classList.add("reset-animation")}),!1);const localitiesRenderer={type:"simple",symbol:{type:"simple-marker",size:6,color:[20,204,180,.5],outline:{width:.5,color:[247,247,247,.5]}}},polygonFeatureRenderer={type:"simple",symbol:{type:"simple-fill",style:"none",outline:{color:[128,128,128,.5],width:"1.5px"}}},countiesLabelClass=new LabelClass({labelExpressionInfo:{expression:"$feature.NAME"},symbol:{type:"text",color:"rgb(40, 40, 40)",haloSize:.5,haloColor:"white",font:{family:"Avenir Next LT Pro Regular",weight:"bold",size:13}}}),regionsLabelClass=new LabelClass({labelExpressionInfo:{expression:"$feature.NAME"},symbol:{type:"text",color:"rgb(40, 40, 40)",haloSize:.5,haloColor:"white",deconflictionStrategy:"static",font:{family:"Avenir Next LT Pro Regular",weight:"normal",size:9.5}}}),areasLabelClass=new LabelClass({labelExpressionInfo:{expression:"Replace(Trim($feature.name), ' ', TextFormatting.NewLine)"},symbol:{type:"text",color:"rgb(40, 40, 40)",haloSize:.5,haloColor:"white",deconflictionStrategy:"static",font:{family:"Avenir Next LT Pro Regular",weight:"bold",size:9.5}}});var countiesMaxScale=1155581,regionsMaxScale=288895,neighborhoodsMinScale=144448;clientFeatureLayer=new FeatureLayer({title:"Areas",spatialReference:{wkid:4326},fields:[{name:"region_type",alias:"Region Type",type:"string"},{name:"objectId",alias:"ObjectId",type:"oid"},{name:"name",alias:"Name",type:"string"},{name:"legacyId",alias:"Legacy object ID",type:"string"}],objectIdField:"objectId",geometryType:"polygon",outFields:["*"],source:[],renderer:polygonFeatureRenderer,labelingInfo:[areasLabelClass]}),localitiesLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/LAU_Localities_View/FeatureServer",renderer:localitiesRenderer}),countiesLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/SoCal_Counties_View/FeatureServer",maxScale:1155581,labelingInfo:[countiesLabelClass],renderer:polygonFeatureRenderer,title:"Counties",outFields:["*"]}),regionsLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/SoCal_Regions_(v2)_View/FeatureServer",minScale:1155581,maxScale:288895,labelingInfo:[regionsLabelClass],renderer:polygonFeatureRenderer,title:"Regions",outFields:["*"]}),neighborhoodsLayer=new FeatureLayer({url:"https://services7.arcgis.com/zT20oMv4ojQGbhWr/arcgis/rest/services/SoCal_Neighborhoods_View/FeatureServer",minScale:144448,labelingInfo:[regionsLabelClass],renderer:polygonFeatureRenderer,title:"Neighborhoods",outFields:["*"]}),map.addMany([neighborhoodsLayer,regionsLayer,countiesLayer,clientFeatureLayer,localitiesLayer]),view.ui.add("select-by-polygon","top-right"),view.ui.add("return-to-extent","top-right"),view.ui.add(zoomDiv,"bottom-right"),view.ui.add("widgetContainer","top-left"),view.whenLayerView(localitiesLayer).then((function(layerView){localityLayerView=layerView}))}document.onclick=clearInterval(resetMapSetInterval),document.getElementById("select-by-polygon").addEventListener("click",drawButtonClickHandler),document.getElementById("return-to-extent").addEventListener("click",resetButtonClickHandler),zoomInDiv.addEventListener("click",zoomInClickHandler),zoomOutDiv.addEventListener("click",zoomOutClickHandler),view.when((function(){setNavigationBounds()})),view.on("click",(function(event){selectFeaturesFromClick(event)})),sketchViewModel.on("create",(function(event){"complete"===event.state&&selectLocalities(event.graphic)}))}));